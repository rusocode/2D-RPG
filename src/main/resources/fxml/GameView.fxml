<?xml version="1.0" encoding="UTF-8"?>

<!-- Estructura simple del Canvas -->
<?import javafx.scene.canvas.Canvas?>
<?import javafx.scene.layout.StackPane?>
<?import javafx.scene.layout.VBox?>
<StackPane fx:id="root" xmlns:fx="http://javafx.com/fxml"
           fx:controller="com.punkipunk.controllers.GameController"
           stylesheets="@../css/game.css">

    <!-- Canvas base del juego -->
    <Canvas fx:id="canvas"/>

    <!-- El VBox como contenedor intermedio esta diseñado para organizar sus hijos verticalmente. Por defecto, permite
         que sus hijos crezcan verticalmente tanto como sea necesario. En JavaFX, las restricciones de tamaño impuestas
         por los contenedores padres generalmente tienen prioridad sobre las propiedades CSS de los hijos. Esto explica
         por que al especificar -fx-max-height: 10px; no lo toma en cuenta. -->
    <VBox fx:id="vboxContainer"> <!-- Contenedor para las vistas superpuestas que se cargan al inicio -->
        <!-- Cuando usas <fx:include> en el FXML, JavaFX automaticamente carga los archivos FXML incluidos usando
             FXMLLoader internamente. No necesitas cargarlos manualmente con FXMLLoader ni añadirlos con root.getChildren().add(). -->
        <fx:include fx:id="statsView" source="StatsView.fxml"
                    visible="false"/> <!-- managed="false" Esto hara que el componente no solo sea invisible, sino que tambien no ocupe espacio en el layout. -->
        <!-- <fx:include fx:id="optionsView" source="OptionsView.fxml" visible="false"/> -->
    </VBox>

</StackPane>